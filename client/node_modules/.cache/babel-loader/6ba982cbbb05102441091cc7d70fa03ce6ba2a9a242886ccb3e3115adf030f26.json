{"ast":null,"code":"var _jsxFileName = \"D:\\\\VIT-AP material\\\\HTML\\\\JavaScripts\\\\QUIZ\\\\quiz-app\\\\client\\\\src\\\\config\\\\firebase.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDXsyq7UDVisKk_pTy5f3QLskg-gnvfgso\",\n  authDomain: \"quizmaker-db0fe.firebaseapp.com\",\n  projectId: \"quizmaker-db0fe\",\n  storageBucket: \"quizmaker-db0fe.firebasestorage.app\",\n  messagingSenderId: \"943089720109\",\n  appId: \"1:943089720109:web:9899117fb37b6fe34991a4\",\n  measurementId: \"G-0B46WWYZEQ\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const loginWithGoogle = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      setUser(result.user);\n    } catch (err) {\n      console.error(\"Google Login Failed:\", err);\n    }\n  };\n  const logout = async () => signOut(auth);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currUser => {\n      setUser(currUser);\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loginWithGoogle,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","signOut","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","provider","AuthContext","AuthProvider","children","_s","user","setUser","loginWithGoogle","result","err","console","error","logout","unsubscribe","currUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/VIT-AP material/HTML/JavaScripts/QUIZ/quiz-app/client/src/config/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from \"firebase/auth\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDXsyq7UDVisKk_pTy5f3QLskg-gnvfgso\",\r\n  authDomain: \"quizmaker-db0fe.firebaseapp.com\",\r\n  projectId: \"quizmaker-db0fe\",\r\n  storageBucket: \"quizmaker-db0fe.firebasestorage.app\",\r\n  messagingSenderId: \"943089720109\",\r\n  appId: \"1:943089720109:web:9899117fb37b6fe34991a4\",\r\n  measurementId: \"G-0B46WWYZEQ\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst provider = new GoogleAuthProvider();\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const loginWithGoogle = async () => {\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      setUser(result.user);\r\n    } catch (err) {\r\n      console.error(\"Google Login Failed:\", err);\r\n    }\r\n  };\r\n  const logout = async () => signOut(auth);\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (currUser) => {\r\n      setUser(currUser);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n  return (\r\n    <AuthContext.Provider value={{ user, loginWithGoogle, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,EAClBC,OAAO,QACF,eAAe;AACtB,SAASC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,iCAAiC;EAC7CC,SAAS,EAAE,iBAAiB;EAC5BC,aAAa,EAAE,qCAAqC;EACpDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,GAAG,GAAGpB,aAAa,CAACY,cAAc,CAAC;AACzC,MAAMS,IAAI,GAAGpB,OAAO,CAACmB,GAAG,CAAC;AACzB,MAAME,QAAQ,GAAG,IAAIpB,kBAAkB,CAAC,CAAC;AAEzC,MAAMqB,WAAW,gBAAGjB,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMkB,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMoB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAM3B,eAAe,CAACkB,IAAI,EAAEC,QAAQ,CAAC;MACpDM,OAAO,CAACE,MAAM,CAACH,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC5C;EACF,CAAC;EACD,MAAMG,MAAM,GAAG,MAAAA,CAAA,KAAY7B,OAAO,CAACgB,IAAI,CAAC;EACxCb,SAAS,CAAC,MAAM;IACd,MAAM2B,WAAW,GAAG/B,kBAAkB,CAACiB,IAAI,EAAGe,QAAQ,IAAK;MACzDR,OAAO,CAACQ,QAAQ,CAAC;IACnB,CAAC,CAAC;IACF,OAAO,MAAMD,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EACN,oBACExB,OAAA,CAACY,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,IAAI;MAAEE,eAAe;MAAEK;IAAO,CAAE;IAAAT,QAAA,EAC5DA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CAtBWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAwBzB,OAAO,MAAMoB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtC,UAAU,CAACgB,WAAW,CAAC;AAAA;AAACsB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}